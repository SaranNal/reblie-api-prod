version: 0.2

phases:
  install:
    runtime-versions:
      docker: 20
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region us-east-1 --no-include-email)
      - REPOSITORY_URI=484537496937.dkr.ecr.us-east-1.amazonaws.com/reblie-api
      # - REPOSITORY_URI=729047448122.dkr.ecr.us-east-1.amazonaws.com/reblie-api-development
      - if echo $CODEBUILD_INITIATOR | grep -qe "-development$"; then REPOSITORY_URI=$REPOSITORY_URI-development;ENV_TYPE=development;fi;
      - if echo $CODEBUILD_INITIATOR | grep -qe "-staging$"; then REPOSITORY_URI=$REPOSITORY_URI-staging;ENV_TYPE=staging;fi;
      - if echo $CODEBUILD_INITIATOR | grep -qe "-production$"; then REPOSITORY_URI=$REPOSITORY_URI-production;ENV_TYPE=production;fi;
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo $REPOSITORY_URI
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - aws lambda invoke --function-name reblie-web-read-env --invocation-type RequestResponse --region us-east-1 --payload "{\"application\":\"${ENV_TYPE}\", \"repoName\":\"reblie-api\" }" app_env.json
      - cat app_env.json | jq -r '.body' >> .env
      - cat .env
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"reblie-api-production","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json
